{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-search\"\n};\nconst _hoisted_2 = {\n  class: \"columns is-multiline\"\n};\nconst _hoisted_3 = {\n  class: \"column is-12\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Search\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"is-size-5 has-text-grey\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductBox = _resolveComponent(\"ProductBox\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"h2\", _hoisted_5, \"Search term: \\\"\" + _toDisplayString($data.query) + \"\\\"\", 1 /* TEXT */)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createBlock(_component_ProductBox, {\n      key: product.id,\n      product: product\n    }, null, 8 /* PROPS */, [\"product\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$data","query","_Fragment","_renderList","products","product","_createBlock","_component_ProductBox","key","id"],"sources":["D:\\UIProject\\UIGroup14\\gamestore_vue\\src\\views\\Search.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-search\">\r\n        <div class=\"columns is-multiline\">\r\n            <div class=\"column is-12\">\r\n                <h1 class=\"title\">Search</h1>\r\n                <h2 class=\"is-size-5 has-text-grey\">Search term: \"{{ query }}\"</h2>\r\n            </div>\r\n\r\n            <ProductBox\r\n             v-for=\"product in products\"\r\n             v-bind:key=\"product.id\"\r\n             v-bind:product=\"product\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axio from 'axios'\r\nimport ProductBox from '@/components/ProductBox.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: 'Search',\r\n    components: {\r\n        ProductBox\r\n    },\r\n    data () {\r\n        return{\r\n            products: [],\r\n            query: ''\r\n        }\r\n    },\r\n    mounted(){\r\n        document.title = 'Search Page <> Game Item Shop!'\r\n\r\n        let uri=window.location.search.substring(1)\r\n        let params = new URLSearchParams(uri)\r\n\r\n        if (params.get('query')){\r\n            this.query = params.get('query')\r\n\r\n            this.performSearch()\r\n        }\r\n    },\r\n    methods: {\r\n        async performSearch() {\r\n            this.$store.commit('setIsLoading', true)\r\n\r\n            await axios\r\n                .post('/api/v1/products/search/', {'query': this.query})\r\n                .then(response => {\r\n                    this.products = response.data\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n\r\n            this.$store.commit('setIsLoading', false)\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAa;;EACfA,KAAK,EAAC;AAAsB;;EACxBA,KAAK,EAAC;AAAc;gCACrBC,mBAAA,CAA6B;EAAzBD,KAAK,EAAC;AAAO,GAAC,QAAM;;EACpBA,KAAK,EAAC;AAAyB;;;uBAJ/CE,mBAAA,CAYM,OAZNC,UAYM,GAXFF,mBAAA,CAUM,OAVNG,UAUM,GATFH,mBAAA,CAGM,OAHNI,UAGM,GAFFC,UAA6B,EAC7BL,mBAAA,CAAmE,MAAnEM,UAAmE,EAA/B,iBAAc,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,KAAK,IAAG,IAAC,gB,sBAGlER,mBAAA,CAG4BS,SAAA,QAAAC,WAAA,CAFTH,KAAA,CAAAI,QAAQ,EAAnBC,OAAO;yBADfC,YAAA,CAG4BC,qBAAA;MADpBC,GAAG,EAAEH,OAAO,CAACI,EAAE;MACfJ,OAAO,EAAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}